#!/bin/bash

# ==============================================================================
# wasta-enable-zswap
#
#   Needed for 20.04 as swap is triggered too easily
#
#   2020-10-02 rik: initial script
#   2021-03-12 rik: update-initramfs called to apply z3fold module
#
# ==============================================================================

# ------------------------------------------------------------------------------
# Setup script to run with superuser permissions
# ------------------------------------------------------------------------------
if [ "$(whoami)" != "root" ]; then
    echo
    echo "This script needs to run with superuser permissions."
    echo "----------------------------------------------------"
    # below will return <blank> if user not in sudo group
    OUT=$(groups $(whoami) | grep "sudo")

    if [ "$OUT" ]; then
        # user has sudo permissions: use them to re-run the script
        echo
        echo "If prompted, enter the sudo password."
        #re-run script with sudo
        sudo bash $0 $*
        LASTERRORLEVEL=$?
    else
        #user doesn't have sudo: limited user, so prompt for sudo user
        until [ "$OUT" ]; do
            echo
            echo "Current user doesn't have sudo permissions."
            echo
            read -p "Enter admin id (blank for root) to run this script:  " SUDO_ID

            # set SUDO_ID to root if not entered
            if [ "$SUDO_ID" ]; then
                OUT=$(groups ${SUDO_ID} | grep "sudo")
            else
                SUDO_ID="root"
                # manually assign $OUT to anything because we will use root!
                OUT="root"
            fi
        done

        # re-run script with $SUDO_ID 
        echo
        echo "Enter password for $SUDO_ID (need to enter twice)."
        su $SUDO_ID -c "sudo bash $0 $*"
        LASTERRORLEVEL=$?

        # give 2nd chance if entered pwd wrong (su doesn't give 2nd chance)
        if [ $LASTERRORLEVEL == 1 ]; then
            su $SUDO_ID -c "sudo bash $0 $*"
            LASTERRORLEVEL=$?
        fi
    fi

    echo
    read -p "FINISHED:  Press <ENTER> to exit..."
    exit $LASTERRORLEVEL
fi

# ------------------------------------------------------------------------------
# Initial Setup
# ------------------------------------------------------------------------------

# if 'auto' parameter passed, run non-interactively
if [ "$1" == "auto" ];
then
    AUTO="auto"
else
    AUTO=""
fi

echo
echo "========================================================================="
echo "=== Wasta-Linux Enable ZSWAP ============================================"
echo "========================================================================="
echo
echo "Ubuntu / Wasta-Linux 20.04 swaps really easily, which kills performance."
echo "zswap uses *COMPRESSED* RAM to buffer swap before writing to disk."
echo "This is good for SSDs (less writing), and good for HDDs (no stalling)."
echo "zswap should NOT be used with zram (uncompress/recompress shuffling)."

USE_ZSWAP=$(grep zswap.enabled=1 /etc/default/grub)
if [ -z "${USE_ZSWAP}" ];
then
    echo

    if [ "${AUTO}" ];
    then
        echo "Enabling zswap...."
    else
        read -p "Enable zswap to use compressed RAM for a swap buffer? (Y/n) " USE_ZSWAP
    fi

    echo

    if [ "${USE_ZSWAP^^}" != "N" ];
    then
        sed -i -e '\|^GRUB_CMDLINE_LINUX_DEFAULT| s| zswap.enabled=[^ "]*||' \
            -e '\|^GRUB_CMDLINE_LINUX_DEFAULT| s|"$| zswap.enabled=1"|' \
            -e '\|^GRUB_CMDLINE_LINUX_DEFAULT| s| zswap.zpool=[^ "]*||' \
            -e '\|^GRUB_CMDLINE_LINUX_DEFAULT| s|"$| zswap.zpool=z3fold"|' \
            /etc/default/grub

        # update grub to enable zswap grub parameters
        update-grub

        # z3fold is the preferred compression algorithm for zswap. We set this
        # in /usr/share/initramfs-tools/modules.d/10-wasta-z3fold, but to ensure
        # it is active, we need to update initramfs

        # update initramfs to apply z3fold module
        update-initramfs -u
    fi
else
echo
echo "No processing needed: zswap already enabled."
echo
fi
[ "${UPDATE_GRUB}" == "Y" ] && update-grub

# ------------------------------------------------------------------------------
# Finished
# ------------------------------------------------------------------------------
printf "\n\n"
echo "========================================================================="
echo "=== Script Finished ====================================================="
echo "========================================================================="


exit 0
